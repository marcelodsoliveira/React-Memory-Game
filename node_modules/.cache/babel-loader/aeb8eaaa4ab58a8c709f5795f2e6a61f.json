{"ast":null,"code":"var _jsxFileName = \"/home/marcelos/Documentos/MyProjects/React-Memory-Game/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport * as C from './App.styles';\nimport logoImage from './assets/devmemory_logo.png';\nimport RestartIcon from './svgs/restart.svg';\nimport { Button } from './components/Button';\nimport { InfoItem } from './components/InfoItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [playing, setPlaying] = useState(false);\n  const [timeElapsed, setTimeElapsed] = useState(0);\n  const [moveCount, setMoveCount] = useState(0);\n  const [shownCount, setShownCount] = useState(0);\n  const [gridItems, setGridItems] = useState([]);\n  useEffect(() => resetAndCreateGrid(), []);\n\n  const resetAndCreateGrid = () => {\n    // passo 1 - resetar o jogo\n    setTimeElapsed(0);\n    setPlaying(false);\n    setMoveCount(0);\n    setShownCount; // passo 2 - criar o grid e começar o jogo\n  };\n\n  return /*#__PURE__*/_jsxDEV(C.Container, {\n    children: [/*#__PURE__*/_jsxDEV(C.Info, {\n      children: [/*#__PURE__*/_jsxDEV(C.LogoLink, {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: logoImage,\n          width: \"200\",\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(C.InfoArea, {\n        children: [/*#__PURE__*/_jsxDEV(InfoItem, {\n          label: \"Temp\",\n          value: \"00:00\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InfoItem, {\n          label: \"Movimentos\",\n          value: \"0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        label: \"Reiniciar\",\n        icon: RestartIcon,\n        onClick: resetAndCreateGrid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(C.GridArea, {\n      children: /*#__PURE__*/_jsxDEV(C.Grid, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"m1C2Bu7UqJb28LSh1PvI2PgpRCE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","C","logoImage","RestartIcon","Button","InfoItem","App","playing","setPlaying","timeElapsed","setTimeElapsed","moveCount","setMoveCount","shownCount","setShownCount","gridItems","setGridItems","resetAndCreateGrid"],"sources":["/home/marcelos/Documentos/MyProjects/React-Memory-Game/src/App.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport * as C from './App.styles';\nimport logoImage from './assets/devmemory_logo.png';\nimport RestartIcon from './svgs/restart.svg'\nimport { Button } from './components/Button';\nimport { InfoItem } from './components/InfoItem';\nimport { GridItemType } from './types/GridItemType';\n\n\n\nconst App = () => {\n  const [playing, setPlaying] = useState<boolean>(false);\n  const [timeElapsed, setTimeElapsed] = useState<number>(0);\n  const [moveCount, setMoveCount] = useState<number>(0);\n  const [shownCount, setShownCount] = useState<number>(0);\n  const [gridItems, setGridItems] = useState<GridItemType[]>([]);\n\n  useEffect(() => resetAndCreateGrid(), []);\n\n  const resetAndCreateGrid = () => {\n    // passo 1 - resetar o jogo\n    setTimeElapsed(0);\n    setPlaying(false);\n    setMoveCount(0);\n    setShownCount\n    \n    // passo 2 - criar o grid e começar o jogo\n  }\n\n  return (\n    <C.Container>\n      <C.Info>\n        <C.LogoLink>\n          <img src={logoImage} width=\"200\" alt=\"\" />\n        </C.LogoLink>\n\n        <C.InfoArea>\n          <InfoItem label=\"Temp\" value=\"00:00\" />\n          <InfoItem label=\"Movimentos\" value=\"0\" />\n        </C.InfoArea>\n\n        <Button label=\"Reiniciar\" icon={RestartIcon} onClick={resetAndCreateGrid} />\n      </C.Info>\n      <C.GridArea>\n        <C.Grid>\n\n        </C.Grid>\n      </C.GridArea>\n    </C.Container>\n  );\n}\n\nexport default App;"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAO,KAAKC,CAAZ,MAAmB,cAAnB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,SAASC,MAAT,QAAuB,qBAAvB;AACA,SAASC,QAAT,QAAyB,uBAAzB;;;AAKA,MAAMC,GAAG,GAAG,MAAM;EAAA;;EAChB,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAU,KAAV,CAAtC;EACA,MAAM,CAACS,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAS,CAAT,CAA9C;EACA,MAAM,CAACW,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAS,CAAT,CAA1C;EACA,MAAM,CAACa,UAAD,EAAaC,aAAb,IAA8Bd,QAAQ,CAAS,CAAT,CAA5C;EACA,MAAM,CAACe,SAAD,EAAYC,YAAZ,IAA4BhB,QAAQ,CAAiB,EAAjB,CAA1C;EAEAD,SAAS,CAAC,MAAMkB,kBAAkB,EAAzB,EAA6B,EAA7B,CAAT;;EAEA,MAAMA,kBAAkB,GAAG,MAAM;IAC/B;IACAP,cAAc,CAAC,CAAD,CAAd;IACAF,UAAU,CAAC,KAAD,CAAV;IACAI,YAAY,CAAC,CAAD,CAAZ;IACAE,aAAa,CALkB,CAO/B;EACD,CARD;;EAUA,oBACE,QAAC,CAAD,CAAG,SAAH;IAAA,wBACE,QAAC,CAAD,CAAG,IAAH;MAAA,wBACE,QAAC,CAAD,CAAG,QAAH;QAAA,uBACE;UAAK,GAAG,EAAEZ,SAAV;UAAqB,KAAK,EAAC,KAA3B;UAAiC,GAAG,EAAC;QAArC;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QADF,eAKE,QAAC,CAAD,CAAG,QAAH;QAAA,wBACE,QAAC,QAAD;UAAU,KAAK,EAAC,MAAhB;UAAuB,KAAK,EAAC;QAA7B;UAAA;UAAA;UAAA;QAAA,QADF,eAEE,QAAC,QAAD;UAAU,KAAK,EAAC,YAAhB;UAA6B,KAAK,EAAC;QAAnC;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QALF,eAUE,QAAC,MAAD;QAAQ,KAAK,EAAC,WAAd;QAA0B,IAAI,EAAEC,WAAhC;QAA6C,OAAO,EAAEc;MAAtD;QAAA;QAAA;QAAA;MAAA,QAVF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAaE,QAAC,CAAD,CAAG,QAAH;MAAA,uBACE,QAAC,CAAD,CAAG,IAAH;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAbF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAqBD,CAxCD;;GAAMX,G;;KAAAA,G;AA0CN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}